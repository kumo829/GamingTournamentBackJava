
plugins {
    id "org.sonarqube" version "3.5.0.2730"
}

sonarqube {
    properties {
        property "sonar.projectKey", "kumo829_GamingTournamentBackJava"
        property "sonar.organization", "alexmontoya"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}


// Common for all projects
allprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'


    group 'com.javatutoriales.gaming'
    version '1.0-SNAPSHOT'

    ext {
        imageTag = project.properties['imageTag'] ?: 'latest'
        imageName = "gaming-platform/${project.name}"
        imageNameAndTag = "${imageName}:${imageTag}"
        testcontainersVersion = "1.17.6"
        lombokVersion = "1.18.24"
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {

        //Beans Validation
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

        //Preprocessors
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        compileOnly"org.projectlombok:lombok:${lombokVersion}"


        //Test
        testImplementation 'org.assertj:assertj-core:3.24.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    }

    test {
        systemProperty 'spring.profiles.active', 'test'
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = false
            html.required = true
        }
    }

    task view_paths {
        doLast { task ->
            println "$task.project.name"
            println "------------------"
            println "Main: $sourceSets.main.java.srcDirTrees"
            println "   Resources: $sourceSets.main.resources.srcDirTrees"
            println "Tests: $sourceSets.test.java.srcDirTrees"
            println "   Resources: $sourceSets.test.resources.srcDirTrees"
        }
    }
}

// All subprojects (located in src/*)
subprojects {

    dependencies {
        if (project.name != "shared") {
            implementation project(":shared")
            testImplementation project(":shared").sourceSets.test.output
        }
    }
}

dependencies {
    testImplementation project(":shared")
}